sudo: false

dist: bionic

language:  minimal

git:
  submodules: false  # whether to recursively clone submodules

#cache:
#  directories:
#    - $HOME/.stack

before_install:
  # This is an unfortunate hack that changes ssh paths into http path, so that
  # we can do a read-only clone of our submodules without worrying about ssh
  # keys.
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init

  # for lean4
  - sudo apt-add-repository 'http://archive.ubuntu.com/ubuntu bionic-updates main restricted'
  - sudo apt install -y llvm-8
  - sudo apt install -y llvm-8-dev
  - sudo apt install -y clang-8

install:
  # Setup elan so we can use it to install lean
  - curl https://raw.githubusercontent.com/Kha/elan/master/elan-init.sh -sSf > elan-init.sh
  - chmod a+x elan-init.sh
  - ./elan-init.sh -y
  - source $HOME/.elan/env
  - elan install 3.4.1

  # Install lean4
  - ./scripts/build-lean4.sh lean4/deps/lean4 build/lean4 local llvm-config-8 -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
  # First, build/test the lean code
  - pushd lean/deps/decodex86
  - leanpkg build
  - leanpkg test
  - popd

  - pushd lean
  - leanpkg build
  - leanpkg test
  - popd

  # Build the semantics binary
  - pushd lean4
  - travis_wait 30 make LEAN_CXX=clang-8 LEAN=$PWD/../local/bin/lean LEANC=$PWD/../local/bin/leanc LLVM_CONFIG=llvm-config-8 CXX=clang-8

  # Run the tests
  - pushd tests
  - bash test.sh
  - popd
  - popd
