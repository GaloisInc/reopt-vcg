def vpblendw : instruction :=
  definst "vpblendw" $ do
    instr_pat $ fun (imm_0 : imm int) (mem_1 : Mem) (xmm_2 : reg (bv 128)) (xmm_3 : reg (bv 128)) =>
     let action : semantics Unit := do
      let v_4 <- eval (handleImmediateWithSignExtend imm_0 8 8);
      let v_5 <- getRegister (lhs.of_reg xmm_2);
      let (v_6 : expression (bv 16)) <- eval (extract v_5 0 16);
      let v_7 <- evaluateAddress mem_1;
      let v_8 <- load v_7 16;
      let (v_9 : expression (bv 16)) <- eval (extract v_8 0 16);
      let (v_10 : expression (bv 16)) <- eval (extract v_5 16 32);
      let (v_11 : expression (bv 16)) <- eval (extract v_8 16 32);
      let (v_12 : expression (bv 16)) <- eval (extract v_5 32 48);
      let (v_13 : expression (bv 16)) <- eval (extract v_8 32 48);
      let (v_14 : expression (bv 16)) <- eval (extract v_5 48 64);
      let (v_15 : expression (bv 16)) <- eval (extract v_8 48 64);
      let (v_16 : expression (bv 16)) <- eval (extract v_5 64 80);
      let (v_17 : expression (bv 16)) <- eval (extract v_8 64 80);
      let (v_18 : expression (bv 16)) <- eval (extract v_5 80 96);
      let (v_19 : expression (bv 16)) <- eval (extract v_8 80 96);
      let (v_20 : expression (bv 16)) <- eval (extract v_5 96 112);
      let (v_21 : expression (bv 16)) <- eval (extract v_8 96 112);
      let (v_22 : expression (bv 16)) <- eval (extract v_5 112 128);
      let (v_23 : expression (bv 16)) <- eval (extract v_8 112 128);
      let v_24 <- eval (concat (mux (isBitClear v_4 6) v_20 v_21) (mux (isBitClear v_4 7) v_22 v_23));
      let v_25 <- eval (concat (mux (isBitClear v_4 5) v_18 v_19) v_24);
      let v_26 <- eval (concat (mux (isBitClear v_4 4) v_16 v_17) v_25);
      let v_27 <- eval (concat (mux (isBitClear v_4 3) v_14 v_15) v_26);
      let v_28 <- eval (concat (mux (isBitClear v_4 2) v_12 v_13) v_27);
      let v_29 <- eval (concat (mux (isBitClear v_4 1) v_10 v_11) v_28);
      let v_30 <- eval (concat (mux (isBitClear v_4 0) v_6 v_9) v_29);
      setRegister (lhs.of_reg xmm_3) v_30;
      pure ()
     action;
    instr_pat $ fun (imm_0 : imm int) (mem_1 : Mem) (ymm_2 : reg (bv 256)) (ymm_3 : reg (bv 256)) =>
     let action : semantics Unit := do
      let v_4 <- eval (handleImmediateWithSignExtend imm_0 8 8);
      let v_5 <- eval (isBitClear v_4 0);
      let v_6 <- getRegister (lhs.of_reg ymm_2);
      let (v_7 : expression (bv 16)) <- eval (extract v_6 0 16);
      let v_8 <- evaluateAddress mem_1;
      let v_9 <- load v_8 32;
      let (v_10 : expression (bv 16)) <- eval (extract v_9 0 16);
      let v_11 <- eval (isBitClear v_4 1);
      let (v_12 : expression (bv 16)) <- eval (extract v_6 16 32);
      let (v_13 : expression (bv 16)) <- eval (extract v_9 16 32);
      let v_14 <- eval (isBitClear v_4 2);
      let (v_15 : expression (bv 16)) <- eval (extract v_6 32 48);
      let (v_16 : expression (bv 16)) <- eval (extract v_9 32 48);
      let v_17 <- eval (isBitClear v_4 3);
      let (v_18 : expression (bv 16)) <- eval (extract v_6 48 64);
      let (v_19 : expression (bv 16)) <- eval (extract v_9 48 64);
      let v_20 <- eval (isBitClear v_4 4);
      let (v_21 : expression (bv 16)) <- eval (extract v_6 64 80);
      let (v_22 : expression (bv 16)) <- eval (extract v_9 64 80);
      let v_23 <- eval (isBitClear v_4 5);
      let (v_24 : expression (bv 16)) <- eval (extract v_6 80 96);
      let (v_25 : expression (bv 16)) <- eval (extract v_9 80 96);
      let v_26 <- eval (isBitClear v_4 6);
      let (v_27 : expression (bv 16)) <- eval (extract v_6 96 112);
      let (v_28 : expression (bv 16)) <- eval (extract v_9 96 112);
      let v_29 <- eval (isBitClear v_4 7);
      let (v_30 : expression (bv 16)) <- eval (extract v_6 112 128);
      let (v_31 : expression (bv 16)) <- eval (extract v_9 112 128);
      let (v_32 : expression (bv 16)) <- eval (extract v_6 128 144);
      let (v_33 : expression (bv 16)) <- eval (extract v_9 128 144);
      let (v_34 : expression (bv 16)) <- eval (extract v_6 144 160);
      let (v_35 : expression (bv 16)) <- eval (extract v_9 144 160);
      let (v_36 : expression (bv 16)) <- eval (extract v_6 160 176);
      let (v_37 : expression (bv 16)) <- eval (extract v_9 160 176);
      let (v_38 : expression (bv 16)) <- eval (extract v_6 176 192);
      let (v_39 : expression (bv 16)) <- eval (extract v_9 176 192);
      let (v_40 : expression (bv 16)) <- eval (extract v_6 192 208);
      let (v_41 : expression (bv 16)) <- eval (extract v_9 192 208);
      let (v_42 : expression (bv 16)) <- eval (extract v_6 208 224);
      let (v_43 : expression (bv 16)) <- eval (extract v_9 208 224);
      let (v_44 : expression (bv 16)) <- eval (extract v_6 224 240);
      let (v_45 : expression (bv 16)) <- eval (extract v_9 224 240);
      let (v_46 : expression (bv 16)) <- eval (extract v_6 240 256);
      let (v_47 : expression (bv 16)) <- eval (extract v_9 240 256);
      let v_48 <- eval (concat (mux v_26 v_44 v_45) (mux v_29 v_46 v_47));
      let v_49 <- eval (concat (mux v_23 v_42 v_43) v_48);
      let v_50 <- eval (concat (mux v_20 v_40 v_41) v_49);
      let v_51 <- eval (concat (mux v_17 v_38 v_39) v_50);
      let v_52 <- eval (concat (mux v_14 v_36 v_37) v_51);
      let v_53 <- eval (concat (mux v_11 v_34 v_35) v_52);
      let v_54 <- eval (concat (mux v_5 v_32 v_33) v_53);
      let v_55 <- eval (concat (mux v_29 v_30 v_31) v_54);
      let v_56 <- eval (concat (mux v_26 v_27 v_28) v_55);
      let v_57 <- eval (concat (mux v_23 v_24 v_25) v_56);
      let v_58 <- eval (concat (mux v_20 v_21 v_22) v_57);
      let v_59 <- eval (concat (mux v_17 v_18 v_19) v_58);
      let v_60 <- eval (concat (mux v_14 v_15 v_16) v_59);
      let v_61 <- eval (concat (mux v_11 v_12 v_13) v_60);
      let v_62 <- eval (concat (mux v_5 v_7 v_10) v_61);
      setRegister (lhs.of_reg ymm_3) v_62;
      pure ()
     action;
    instr_pat $ fun (imm_0 : imm int) (xmm_1 : reg (bv 128)) (xmm_2 : reg (bv 128)) (xmm_3 : reg (bv 128)) =>
     let action : semantics Unit := do
      let v_4 <- eval (handleImmediateWithSignExtend imm_0 8 8);
      let v_5 <- getRegister (lhs.of_reg xmm_2);
      let (v_6 : expression (bv 16)) <- eval (extract v_5 0 16);
      let v_7 <- getRegister (lhs.of_reg xmm_1);
      let (v_8 : expression (bv 16)) <- eval (extract v_7 0 16);
      let (v_9 : expression (bv 16)) <- eval (extract v_5 16 32);
      let (v_10 : expression (bv 16)) <- eval (extract v_7 16 32);
      let (v_11 : expression (bv 16)) <- eval (extract v_5 32 48);
      let (v_12 : expression (bv 16)) <- eval (extract v_7 32 48);
      let (v_13 : expression (bv 16)) <- eval (extract v_5 48 64);
      let (v_14 : expression (bv 16)) <- eval (extract v_7 48 64);
      let (v_15 : expression (bv 16)) <- eval (extract v_5 64 80);
      let (v_16 : expression (bv 16)) <- eval (extract v_7 64 80);
      let (v_17 : expression (bv 16)) <- eval (extract v_5 80 96);
      let (v_18 : expression (bv 16)) <- eval (extract v_7 80 96);
      let (v_19 : expression (bv 16)) <- eval (extract v_5 96 112);
      let (v_20 : expression (bv 16)) <- eval (extract v_7 96 112);
      let (v_21 : expression (bv 16)) <- eval (extract v_5 112 128);
      let (v_22 : expression (bv 16)) <- eval (extract v_7 112 128);
      let v_23 <- eval (concat (mux (isBitClear v_4 6) v_19 v_20) (mux (isBitClear v_4 7) v_21 v_22));
      let v_24 <- eval (concat (mux (isBitClear v_4 5) v_17 v_18) v_23);
      let v_25 <- eval (concat (mux (isBitClear v_4 4) v_15 v_16) v_24);
      let v_26 <- eval (concat (mux (isBitClear v_4 3) v_13 v_14) v_25);
      let v_27 <- eval (concat (mux (isBitClear v_4 2) v_11 v_12) v_26);
      let v_28 <- eval (concat (mux (isBitClear v_4 1) v_9 v_10) v_27);
      let v_29 <- eval (concat (mux (isBitClear v_4 0) v_6 v_8) v_28);
      setRegister (lhs.of_reg xmm_3) v_29;
      pure ()
     action;
    instr_pat $ fun (imm_0 : imm int) (ymm_1 : reg (bv 256)) (ymm_2 : reg (bv 256)) (ymm_3 : reg (bv 256)) =>
     let action : semantics Unit := do
      let v_4 <- eval (handleImmediateWithSignExtend imm_0 8 8);
      let v_5 <- eval (isBitClear v_4 0);
      let v_6 <- getRegister (lhs.of_reg ymm_2);
      let (v_7 : expression (bv 16)) <- eval (extract v_6 0 16);
      let v_8 <- getRegister (lhs.of_reg ymm_1);
      let (v_9 : expression (bv 16)) <- eval (extract v_8 0 16);
      let v_10 <- eval (isBitClear v_4 1);
      let (v_11 : expression (bv 16)) <- eval (extract v_6 16 32);
      let (v_12 : expression (bv 16)) <- eval (extract v_8 16 32);
      let v_13 <- eval (isBitClear v_4 2);
      let (v_14 : expression (bv 16)) <- eval (extract v_6 32 48);
      let (v_15 : expression (bv 16)) <- eval (extract v_8 32 48);
      let v_16 <- eval (isBitClear v_4 3);
      let (v_17 : expression (bv 16)) <- eval (extract v_6 48 64);
      let (v_18 : expression (bv 16)) <- eval (extract v_8 48 64);
      let v_19 <- eval (isBitClear v_4 4);
      let (v_20 : expression (bv 16)) <- eval (extract v_6 64 80);
      let (v_21 : expression (bv 16)) <- eval (extract v_8 64 80);
      let v_22 <- eval (isBitClear v_4 5);
      let (v_23 : expression (bv 16)) <- eval (extract v_6 80 96);
      let (v_24 : expression (bv 16)) <- eval (extract v_8 80 96);
      let v_25 <- eval (isBitClear v_4 6);
      let (v_26 : expression (bv 16)) <- eval (extract v_6 96 112);
      let (v_27 : expression (bv 16)) <- eval (extract v_8 96 112);
      let v_28 <- eval (isBitClear v_4 7);
      let (v_29 : expression (bv 16)) <- eval (extract v_6 112 128);
      let (v_30 : expression (bv 16)) <- eval (extract v_8 112 128);
      let (v_31 : expression (bv 16)) <- eval (extract v_6 128 144);
      let (v_32 : expression (bv 16)) <- eval (extract v_8 128 144);
      let (v_33 : expression (bv 16)) <- eval (extract v_6 144 160);
      let (v_34 : expression (bv 16)) <- eval (extract v_8 144 160);
      let (v_35 : expression (bv 16)) <- eval (extract v_6 160 176);
      let (v_36 : expression (bv 16)) <- eval (extract v_8 160 176);
      let (v_37 : expression (bv 16)) <- eval (extract v_6 176 192);
      let (v_38 : expression (bv 16)) <- eval (extract v_8 176 192);
      let (v_39 : expression (bv 16)) <- eval (extract v_6 192 208);
      let (v_40 : expression (bv 16)) <- eval (extract v_8 192 208);
      let (v_41 : expression (bv 16)) <- eval (extract v_6 208 224);
      let (v_42 : expression (bv 16)) <- eval (extract v_8 208 224);
      let (v_43 : expression (bv 16)) <- eval (extract v_6 224 240);
      let (v_44 : expression (bv 16)) <- eval (extract v_8 224 240);
      let (v_45 : expression (bv 16)) <- eval (extract v_6 240 256);
      let (v_46 : expression (bv 16)) <- eval (extract v_8 240 256);
      let v_47 <- eval (concat (mux v_25 v_43 v_44) (mux v_28 v_45 v_46));
      let v_48 <- eval (concat (mux v_22 v_41 v_42) v_47);
      let v_49 <- eval (concat (mux v_19 v_39 v_40) v_48);
      let v_50 <- eval (concat (mux v_16 v_37 v_38) v_49);
      let v_51 <- eval (concat (mux v_13 v_35 v_36) v_50);
      let v_52 <- eval (concat (mux v_10 v_33 v_34) v_51);
      let v_53 <- eval (concat (mux v_5 v_31 v_32) v_52);
      let v_54 <- eval (concat (mux v_28 v_29 v_30) v_53);
      let v_55 <- eval (concat (mux v_25 v_26 v_27) v_54);
      let v_56 <- eval (concat (mux v_22 v_23 v_24) v_55);
      let v_57 <- eval (concat (mux v_19 v_20 v_21) v_56);
      let v_58 <- eval (concat (mux v_16 v_17 v_18) v_57);
      let v_59 <- eval (concat (mux v_13 v_14 v_15) v_58);
      let v_60 <- eval (concat (mux v_10 v_11 v_12) v_59);
      let v_61 <- eval (concat (mux v_5 v_7 v_9) v_60);
      setRegister (lhs.of_reg ymm_3) v_61;
      pure ()
     action
