def tzcntq : instruction :=
  definst "tzcntq" $ do
    pattern fun (mem_0 : Mem) (r64_1 : reg (bv 64)) => do
      v_2 <- evaluateAddress mem_0;
      v_3 <- load v_2 8;
      v_4 <- eval (mux (isBitSet v_3 63) (expression.bv_nat 64 0) (mux (isBitSet v_3 62) (expression.bv_nat 64 1) (mux (isBitSet v_3 61) (expression.bv_nat 64 2) (mux (isBitSet v_3 60) (expression.bv_nat 64 3) (mux (isBitSet v_3 59) (expression.bv_nat 64 4) (mux (isBitSet v_3 58) (expression.bv_nat 64 5) (mux (isBitSet v_3 57) (expression.bv_nat 64 6) (mux (isBitSet v_3 56) (expression.bv_nat 64 7) (mux (isBitSet v_3 55) (expression.bv_nat 64 8) (mux (isBitSet v_3 54) (expression.bv_nat 64 9) (mux (isBitSet v_3 53) (expression.bv_nat 64 10) (mux (isBitSet v_3 52) (expression.bv_nat 64 11) (mux (isBitSet v_3 51) (expression.bv_nat 64 12) (mux (isBitSet v_3 50) (expression.bv_nat 64 13) (mux (isBitSet v_3 49) (expression.bv_nat 64 14) (mux (isBitSet v_3 48) (expression.bv_nat 64 15) (mux (isBitSet v_3 47) (expression.bv_nat 64 16) (mux (isBitSet v_3 46) (expression.bv_nat 64 17) (mux (isBitSet v_3 45) (expression.bv_nat 64 18) (mux (isBitSet v_3 44) (expression.bv_nat 64 19) (mux (isBitSet v_3 43) (expression.bv_nat 64 20) (mux (isBitSet v_3 42) (expression.bv_nat 64 21) (mux (isBitSet v_3 41) (expression.bv_nat 64 22) (mux (isBitSet v_3 40) (expression.bv_nat 64 23) (mux (isBitSet v_3 39) (expression.bv_nat 64 24) (mux (isBitSet v_3 38) (expression.bv_nat 64 25) (mux (isBitSet v_3 37) (expression.bv_nat 64 26) (mux (isBitSet v_3 36) (expression.bv_nat 64 27) (mux (isBitSet v_3 35) (expression.bv_nat 64 28) (mux (isBitSet v_3 34) (expression.bv_nat 64 29) (mux (isBitSet v_3 33) (expression.bv_nat 64 30) (mux (isBitSet v_3 32) (expression.bv_nat 64 31) (mux (isBitSet v_3 31) (expression.bv_nat 64 32) (mux (isBitSet v_3 30) (expression.bv_nat 64 33) (mux (isBitSet v_3 29) (expression.bv_nat 64 34) (mux (isBitSet v_3 28) (expression.bv_nat 64 35) (mux (isBitSet v_3 27) (expression.bv_nat 64 36) (mux (isBitSet v_3 26) (expression.bv_nat 64 37) (mux (isBitSet v_3 25) (expression.bv_nat 64 38) (mux (isBitSet v_3 24) (expression.bv_nat 64 39) (mux (isBitSet v_3 23) (expression.bv_nat 64 40) (mux (isBitSet v_3 22) (expression.bv_nat 64 41) (mux (isBitSet v_3 21) (expression.bv_nat 64 42) (mux (isBitSet v_3 20) (expression.bv_nat 64 43) (mux (isBitSet v_3 19) (expression.bv_nat 64 44) (mux (isBitSet v_3 18) (expression.bv_nat 64 45) (mux (isBitSet v_3 17) (expression.bv_nat 64 46) (mux (isBitSet v_3 16) (expression.bv_nat 64 47) (mux (isBitSet v_3 15) (expression.bv_nat 64 48) (mux (isBitSet v_3 14) (expression.bv_nat 64 49) (mux (isBitSet v_3 13) (expression.bv_nat 64 50) (mux (isBitSet v_3 12) (expression.bv_nat 64 51) (mux (isBitSet v_3 11) (expression.bv_nat 64 52) (mux (isBitSet v_3 10) (expression.bv_nat 64 53) (mux (isBitSet v_3 9) (expression.bv_nat 64 54) (mux (isBitSet v_3 8) (expression.bv_nat 64 55) (mux (isBitSet v_3 7) (expression.bv_nat 64 56) (mux (isBitSet v_3 6) (expression.bv_nat 64 57) (mux (isBitSet v_3 5) (expression.bv_nat 64 58) (mux (isBitSet v_3 4) (expression.bv_nat 64 59) (mux (isBitSet v_3 3) (expression.bv_nat 64 60) (mux (isBitSet v_3 2) (expression.bv_nat 64 61) (mux (isBitSet v_3 1) (expression.bv_nat 64 62) (mux (isBitSet v_3 0) (expression.bv_nat 64 63) (expression.bv_nat 64 64)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
      setRegister (lhs.of_reg r64_1) v_4;
      setRegister af undef;
      setRegister cf (eq v_4 (expression.bv_nat 64 64));
      setRegister of undef;
      setRegister pf undef;
      setRegister sf undef;
      setRegister zf (zeroFlag v_4);
      pure ()
    pat_end;
    pattern fun (r64_0 : reg (bv 64)) (r64_1 : reg (bv 64)) => do
      v_2 <- getRegister (lhs.of_reg r64_0);
      v_3 <- eval (mux (isBitSet v_2 63) (expression.bv_nat 64 0) (mux (isBitSet v_2 62) (expression.bv_nat 64 1) (mux (isBitSet v_2 61) (expression.bv_nat 64 2) (mux (isBitSet v_2 60) (expression.bv_nat 64 3) (mux (isBitSet v_2 59) (expression.bv_nat 64 4) (mux (isBitSet v_2 58) (expression.bv_nat 64 5) (mux (isBitSet v_2 57) (expression.bv_nat 64 6) (mux (isBitSet v_2 56) (expression.bv_nat 64 7) (mux (isBitSet v_2 55) (expression.bv_nat 64 8) (mux (isBitSet v_2 54) (expression.bv_nat 64 9) (mux (isBitSet v_2 53) (expression.bv_nat 64 10) (mux (isBitSet v_2 52) (expression.bv_nat 64 11) (mux (isBitSet v_2 51) (expression.bv_nat 64 12) (mux (isBitSet v_2 50) (expression.bv_nat 64 13) (mux (isBitSet v_2 49) (expression.bv_nat 64 14) (mux (isBitSet v_2 48) (expression.bv_nat 64 15) (mux (isBitSet v_2 47) (expression.bv_nat 64 16) (mux (isBitSet v_2 46) (expression.bv_nat 64 17) (mux (isBitSet v_2 45) (expression.bv_nat 64 18) (mux (isBitSet v_2 44) (expression.bv_nat 64 19) (mux (isBitSet v_2 43) (expression.bv_nat 64 20) (mux (isBitSet v_2 42) (expression.bv_nat 64 21) (mux (isBitSet v_2 41) (expression.bv_nat 64 22) (mux (isBitSet v_2 40) (expression.bv_nat 64 23) (mux (isBitSet v_2 39) (expression.bv_nat 64 24) (mux (isBitSet v_2 38) (expression.bv_nat 64 25) (mux (isBitSet v_2 37) (expression.bv_nat 64 26) (mux (isBitSet v_2 36) (expression.bv_nat 64 27) (mux (isBitSet v_2 35) (expression.bv_nat 64 28) (mux (isBitSet v_2 34) (expression.bv_nat 64 29) (mux (isBitSet v_2 33) (expression.bv_nat 64 30) (mux (isBitSet v_2 32) (expression.bv_nat 64 31) (mux (isBitSet v_2 31) (expression.bv_nat 64 32) (mux (isBitSet v_2 30) (expression.bv_nat 64 33) (mux (isBitSet v_2 29) (expression.bv_nat 64 34) (mux (isBitSet v_2 28) (expression.bv_nat 64 35) (mux (isBitSet v_2 27) (expression.bv_nat 64 36) (mux (isBitSet v_2 26) (expression.bv_nat 64 37) (mux (isBitSet v_2 25) (expression.bv_nat 64 38) (mux (isBitSet v_2 24) (expression.bv_nat 64 39) (mux (isBitSet v_2 23) (expression.bv_nat 64 40) (mux (isBitSet v_2 22) (expression.bv_nat 64 41) (mux (isBitSet v_2 21) (expression.bv_nat 64 42) (mux (isBitSet v_2 20) (expression.bv_nat 64 43) (mux (isBitSet v_2 19) (expression.bv_nat 64 44) (mux (isBitSet v_2 18) (expression.bv_nat 64 45) (mux (isBitSet v_2 17) (expression.bv_nat 64 46) (mux (isBitSet v_2 16) (expression.bv_nat 64 47) (mux (isBitSet v_2 15) (expression.bv_nat 64 48) (mux (isBitSet v_2 14) (expression.bv_nat 64 49) (mux (isBitSet v_2 13) (expression.bv_nat 64 50) (mux (isBitSet v_2 12) (expression.bv_nat 64 51) (mux (isBitSet v_2 11) (expression.bv_nat 64 52) (mux (isBitSet v_2 10) (expression.bv_nat 64 53) (mux (isBitSet v_2 9) (expression.bv_nat 64 54) (mux (isBitSet v_2 8) (expression.bv_nat 64 55) (mux (isBitSet v_2 7) (expression.bv_nat 64 56) (mux (isBitSet v_2 6) (expression.bv_nat 64 57) (mux (isBitSet v_2 5) (expression.bv_nat 64 58) (mux (isBitSet v_2 4) (expression.bv_nat 64 59) (mux (isBitSet v_2 3) (expression.bv_nat 64 60) (mux (isBitSet v_2 2) (expression.bv_nat 64 61) (mux (isBitSet v_2 1) (expression.bv_nat 64 62) (mux (isBitSet v_2 0) (expression.bv_nat 64 63) (expression.bv_nat 64 64)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
      setRegister (lhs.of_reg r64_1) v_3;
      setRegister af undef;
      setRegister cf (eq v_3 (expression.bv_nat 64 64));
      setRegister of undef;
      setRegister pf undef;
      setRegister sf undef;
      setRegister zf (zeroFlag v_3);
      pure ()
    pat_end
