def bzhiq : instruction :=
  definst "bzhiq" $ do
    pattern fun (r64_0 : reg (bv 64)) (mem_1 : Mem) (r64_2 : reg (bv 64)) => do
      v_3 <- getRegister (lhs.of_reg r64_0);
      v_4 <- eval (extract v_3 56 64);
      v_5 <- eval (ult v_4 (expression.bv_nat 8 64));
      v_6 <- evaluateAddress mem_1;
      v_7 <- load v_6 8;
      v_8 <- eval (mux v_5 (mux (eq v_4 (expression.bv_nat 8 63)) (concat (expression.bv_nat 1 0) (extract v_7 1 64)) (mux (eq v_4 (expression.bv_nat 8 62)) (concat (expression.bv_nat 2 0) (extract v_7 2 64)) (mux (eq v_4 (expression.bv_nat 8 61)) (concat (expression.bv_nat 3 0) (extract v_7 3 64)) (mux (eq v_4 (expression.bv_nat 8 60)) (concat (expression.bv_nat 4 0) (extract v_7 4 64)) (mux (eq v_4 (expression.bv_nat 8 59)) (concat (expression.bv_nat 5 0) (extract v_7 5 64)) (mux (eq v_4 (expression.bv_nat 8 58)) (concat (expression.bv_nat 6 0) (extract v_7 6 64)) (mux (eq v_4 (expression.bv_nat 8 57)) (concat (expression.bv_nat 7 0) (extract v_7 7 64)) (mux (eq v_4 (expression.bv_nat 8 56)) (concat (expression.bv_nat 8 0) (extract v_7 8 64)) (mux (eq v_4 (expression.bv_nat 8 55)) (concat (expression.bv_nat 9 0) (extract v_7 9 64)) (mux (eq v_4 (expression.bv_nat 8 54)) (concat (expression.bv_nat 10 0) (extract v_7 10 64)) (mux (eq v_4 (expression.bv_nat 8 53)) (concat (expression.bv_nat 11 0) (extract v_7 11 64)) (mux (eq v_4 (expression.bv_nat 8 52)) (concat (expression.bv_nat 12 0) (extract v_7 12 64)) (mux (eq v_4 (expression.bv_nat 8 51)) (concat (expression.bv_nat 13 0) (extract v_7 13 64)) (mux (eq v_4 (expression.bv_nat 8 50)) (concat (expression.bv_nat 14 0) (extract v_7 14 64)) (mux (eq v_4 (expression.bv_nat 8 49)) (concat (expression.bv_nat 15 0) (extract v_7 15 64)) (mux (eq v_4 (expression.bv_nat 8 48)) (concat (expression.bv_nat 16 0) (extract v_7 16 64)) (mux (eq v_4 (expression.bv_nat 8 47)) (concat (expression.bv_nat 17 0) (extract v_7 17 64)) (mux (eq v_4 (expression.bv_nat 8 46)) (concat (expression.bv_nat 18 0) (extract v_7 18 64)) (mux (eq v_4 (expression.bv_nat 8 45)) (concat (expression.bv_nat 19 0) (extract v_7 19 64)) (mux (eq v_4 (expression.bv_nat 8 44)) (concat (expression.bv_nat 20 0) (extract v_7 20 64)) (mux (eq v_4 (expression.bv_nat 8 43)) (concat (expression.bv_nat 21 0) (extract v_7 21 64)) (mux (eq v_4 (expression.bv_nat 8 42)) (concat (expression.bv_nat 22 0) (extract v_7 22 64)) (mux (eq v_4 (expression.bv_nat 8 41)) (concat (expression.bv_nat 23 0) (extract v_7 23 64)) (mux (eq v_4 (expression.bv_nat 8 40)) (concat (expression.bv_nat 24 0) (extract v_7 24 64)) (mux (eq v_4 (expression.bv_nat 8 39)) (concat (expression.bv_nat 25 0) (extract v_7 25 64)) (mux (eq v_4 (expression.bv_nat 8 38)) (concat (expression.bv_nat 26 0) (extract v_7 26 64)) (mux (eq v_4 (expression.bv_nat 8 37)) (concat (expression.bv_nat 27 0) (extract v_7 27 64)) (mux (eq v_4 (expression.bv_nat 8 36)) (concat (expression.bv_nat 28 0) (extract v_7 28 64)) (mux (eq v_4 (expression.bv_nat 8 35)) (concat (expression.bv_nat 29 0) (extract v_7 29 64)) (mux (eq v_4 (expression.bv_nat 8 34)) (concat (expression.bv_nat 30 0) (extract v_7 30 64)) (mux (eq v_4 (expression.bv_nat 8 33)) (concat (expression.bv_nat 31 0) (extract v_7 31 64)) (mux (eq v_4 (expression.bv_nat 8 32)) (concat (expression.bv_nat 32 0) (extract v_7 32 64)) (mux (eq v_4 (expression.bv_nat 8 31)) (concat (expression.bv_nat 33 0) (extract v_7 33 64)) (mux (eq v_4 (expression.bv_nat 8 30)) (concat (expression.bv_nat 34 0) (extract v_7 34 64)) (mux (eq v_4 (expression.bv_nat 8 29)) (concat (expression.bv_nat 35 0) (extract v_7 35 64)) (mux (eq v_4 (expression.bv_nat 8 28)) (concat (expression.bv_nat 36 0) (extract v_7 36 64)) (mux (eq v_4 (expression.bv_nat 8 27)) (concat (expression.bv_nat 37 0) (extract v_7 37 64)) (mux (eq v_4 (expression.bv_nat 8 26)) (concat (expression.bv_nat 38 0) (extract v_7 38 64)) (mux (eq v_4 (expression.bv_nat 8 25)) (concat (expression.bv_nat 39 0) (extract v_7 39 64)) (mux (eq v_4 (expression.bv_nat 8 24)) (concat (expression.bv_nat 40 0) (extract v_7 40 64)) (mux (eq v_4 (expression.bv_nat 8 23)) (concat (expression.bv_nat 41 0) (extract v_7 41 64)) (mux (eq v_4 (expression.bv_nat 8 22)) (concat (expression.bv_nat 42 0) (extract v_7 42 64)) (mux (eq v_4 (expression.bv_nat 8 21)) (concat (expression.bv_nat 43 0) (extract v_7 43 64)) (mux (eq v_4 (expression.bv_nat 8 20)) (concat (expression.bv_nat 44 0) (extract v_7 44 64)) (mux (eq v_4 (expression.bv_nat 8 19)) (concat (expression.bv_nat 45 0) (extract v_7 45 64)) (mux (eq v_4 (expression.bv_nat 8 18)) (concat (expression.bv_nat 46 0) (extract v_7 46 64)) (mux (eq v_4 (expression.bv_nat 8 17)) (concat (expression.bv_nat 47 0) (extract v_7 47 64)) (mux (eq v_4 (expression.bv_nat 8 16)) (concat (expression.bv_nat 48 0) (extract v_7 48 64)) (mux (eq v_4 (expression.bv_nat 8 15)) (concat (expression.bv_nat 49 0) (extract v_7 49 64)) (mux (eq v_4 (expression.bv_nat 8 14)) (concat (expression.bv_nat 50 0) (extract v_7 50 64)) (mux (eq v_4 (expression.bv_nat 8 13)) (concat (expression.bv_nat 51 0) (extract v_7 51 64)) (mux (eq v_4 (expression.bv_nat 8 12)) (concat (expression.bv_nat 52 0) (extract v_7 52 64)) (mux (eq v_4 (expression.bv_nat 8 11)) (concat (expression.bv_nat 53 0) (extract v_7 53 64)) (mux (eq v_4 (expression.bv_nat 8 10)) (concat (expression.bv_nat 54 0) (extract v_7 54 64)) (mux (eq v_4 (expression.bv_nat 8 9)) (concat (expression.bv_nat 55 0) (extract v_7 55 64)) (mux (eq v_4 (expression.bv_nat 8 8)) (concat (expression.bv_nat 56 0) (extract v_7 56 64)) (mux (eq v_4 (expression.bv_nat 8 7)) (concat (expression.bv_nat 57 0) (extract v_7 57 64)) (mux (eq v_4 (expression.bv_nat 8 6)) (concat (expression.bv_nat 58 0) (extract v_7 58 64)) (mux (eq v_4 (expression.bv_nat 8 5)) (concat (expression.bv_nat 59 0) (extract v_7 59 64)) (mux (eq v_4 (expression.bv_nat 8 4)) (concat (expression.bv_nat 60 0) (extract v_7 60 64)) (mux (eq v_4 (expression.bv_nat 8 3)) (concat (expression.bv_nat 61 0) (extract v_7 61 64)) (mux (eq v_4 (expression.bv_nat 8 2)) (concat (expression.bv_nat 62 0) (extract v_7 62 64)) (concat (expression.bv_nat 63 0) (mux (eq v_4 (expression.bv_nat 8 1)) (extract v_7 63 64) (expression.bv_nat 1 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) v_7);
      setRegister (lhs.of_reg r64_2) v_8;
      setRegister af undef;
      setRegister cf (uge v_4 (expression.bv_nat 8 64));
      setRegister of bit_zero;
      setRegister pf undef;
      setRegister sf (mux v_5 bit_zero (isBitSet v_7 0));
      setRegister zf (zeroFlag v_8);
      pure ()
    pat_end;
    pattern fun (r64_0 : reg (bv 64)) (r64_1 : reg (bv 64)) (r64_2 : reg (bv 64)) => do
      v_3 <- getRegister (lhs.of_reg r64_0);
      v_4 <- eval (extract v_3 56 64);
      v_5 <- eval (ult v_4 (expression.bv_nat 8 64));
      v_6 <- getRegister (lhs.of_reg r64_1);
      v_7 <- eval (mux v_5 (mux (eq v_4 (expression.bv_nat 8 63)) (concat (expression.bv_nat 1 0) (extract v_6 1 64)) (mux (eq v_4 (expression.bv_nat 8 62)) (concat (expression.bv_nat 2 0) (extract v_6 2 64)) (mux (eq v_4 (expression.bv_nat 8 61)) (concat (expression.bv_nat 3 0) (extract v_6 3 64)) (mux (eq v_4 (expression.bv_nat 8 60)) (concat (expression.bv_nat 4 0) (extract v_6 4 64)) (mux (eq v_4 (expression.bv_nat 8 59)) (concat (expression.bv_nat 5 0) (extract v_6 5 64)) (mux (eq v_4 (expression.bv_nat 8 58)) (concat (expression.bv_nat 6 0) (extract v_6 6 64)) (mux (eq v_4 (expression.bv_nat 8 57)) (concat (expression.bv_nat 7 0) (extract v_6 7 64)) (mux (eq v_4 (expression.bv_nat 8 56)) (concat (expression.bv_nat 8 0) (extract v_6 8 64)) (mux (eq v_4 (expression.bv_nat 8 55)) (concat (expression.bv_nat 9 0) (extract v_6 9 64)) (mux (eq v_4 (expression.bv_nat 8 54)) (concat (expression.bv_nat 10 0) (extract v_6 10 64)) (mux (eq v_4 (expression.bv_nat 8 53)) (concat (expression.bv_nat 11 0) (extract v_6 11 64)) (mux (eq v_4 (expression.bv_nat 8 52)) (concat (expression.bv_nat 12 0) (extract v_6 12 64)) (mux (eq v_4 (expression.bv_nat 8 51)) (concat (expression.bv_nat 13 0) (extract v_6 13 64)) (mux (eq v_4 (expression.bv_nat 8 50)) (concat (expression.bv_nat 14 0) (extract v_6 14 64)) (mux (eq v_4 (expression.bv_nat 8 49)) (concat (expression.bv_nat 15 0) (extract v_6 15 64)) (mux (eq v_4 (expression.bv_nat 8 48)) (concat (expression.bv_nat 16 0) (extract v_6 16 64)) (mux (eq v_4 (expression.bv_nat 8 47)) (concat (expression.bv_nat 17 0) (extract v_6 17 64)) (mux (eq v_4 (expression.bv_nat 8 46)) (concat (expression.bv_nat 18 0) (extract v_6 18 64)) (mux (eq v_4 (expression.bv_nat 8 45)) (concat (expression.bv_nat 19 0) (extract v_6 19 64)) (mux (eq v_4 (expression.bv_nat 8 44)) (concat (expression.bv_nat 20 0) (extract v_6 20 64)) (mux (eq v_4 (expression.bv_nat 8 43)) (concat (expression.bv_nat 21 0) (extract v_6 21 64)) (mux (eq v_4 (expression.bv_nat 8 42)) (concat (expression.bv_nat 22 0) (extract v_6 22 64)) (mux (eq v_4 (expression.bv_nat 8 41)) (concat (expression.bv_nat 23 0) (extract v_6 23 64)) (mux (eq v_4 (expression.bv_nat 8 40)) (concat (expression.bv_nat 24 0) (extract v_6 24 64)) (mux (eq v_4 (expression.bv_nat 8 39)) (concat (expression.bv_nat 25 0) (extract v_6 25 64)) (mux (eq v_4 (expression.bv_nat 8 38)) (concat (expression.bv_nat 26 0) (extract v_6 26 64)) (mux (eq v_4 (expression.bv_nat 8 37)) (concat (expression.bv_nat 27 0) (extract v_6 27 64)) (mux (eq v_4 (expression.bv_nat 8 36)) (concat (expression.bv_nat 28 0) (extract v_6 28 64)) (mux (eq v_4 (expression.bv_nat 8 35)) (concat (expression.bv_nat 29 0) (extract v_6 29 64)) (mux (eq v_4 (expression.bv_nat 8 34)) (concat (expression.bv_nat 30 0) (extract v_6 30 64)) (mux (eq v_4 (expression.bv_nat 8 33)) (concat (expression.bv_nat 31 0) (extract v_6 31 64)) (mux (eq v_4 (expression.bv_nat 8 32)) (concat (expression.bv_nat 32 0) (extract v_6 32 64)) (mux (eq v_4 (expression.bv_nat 8 31)) (concat (expression.bv_nat 33 0) (extract v_6 33 64)) (mux (eq v_4 (expression.bv_nat 8 30)) (concat (expression.bv_nat 34 0) (extract v_6 34 64)) (mux (eq v_4 (expression.bv_nat 8 29)) (concat (expression.bv_nat 35 0) (extract v_6 35 64)) (mux (eq v_4 (expression.bv_nat 8 28)) (concat (expression.bv_nat 36 0) (extract v_6 36 64)) (mux (eq v_4 (expression.bv_nat 8 27)) (concat (expression.bv_nat 37 0) (extract v_6 37 64)) (mux (eq v_4 (expression.bv_nat 8 26)) (concat (expression.bv_nat 38 0) (extract v_6 38 64)) (mux (eq v_4 (expression.bv_nat 8 25)) (concat (expression.bv_nat 39 0) (extract v_6 39 64)) (mux (eq v_4 (expression.bv_nat 8 24)) (concat (expression.bv_nat 40 0) (extract v_6 40 64)) (mux (eq v_4 (expression.bv_nat 8 23)) (concat (expression.bv_nat 41 0) (extract v_6 41 64)) (mux (eq v_4 (expression.bv_nat 8 22)) (concat (expression.bv_nat 42 0) (extract v_6 42 64)) (mux (eq v_4 (expression.bv_nat 8 21)) (concat (expression.bv_nat 43 0) (extract v_6 43 64)) (mux (eq v_4 (expression.bv_nat 8 20)) (concat (expression.bv_nat 44 0) (extract v_6 44 64)) (mux (eq v_4 (expression.bv_nat 8 19)) (concat (expression.bv_nat 45 0) (extract v_6 45 64)) (mux (eq v_4 (expression.bv_nat 8 18)) (concat (expression.bv_nat 46 0) (extract v_6 46 64)) (mux (eq v_4 (expression.bv_nat 8 17)) (concat (expression.bv_nat 47 0) (extract v_6 47 64)) (mux (eq v_4 (expression.bv_nat 8 16)) (concat (expression.bv_nat 48 0) (extract v_6 48 64)) (mux (eq v_4 (expression.bv_nat 8 15)) (concat (expression.bv_nat 49 0) (extract v_6 49 64)) (mux (eq v_4 (expression.bv_nat 8 14)) (concat (expression.bv_nat 50 0) (extract v_6 50 64)) (mux (eq v_4 (expression.bv_nat 8 13)) (concat (expression.bv_nat 51 0) (extract v_6 51 64)) (mux (eq v_4 (expression.bv_nat 8 12)) (concat (expression.bv_nat 52 0) (extract v_6 52 64)) (mux (eq v_4 (expression.bv_nat 8 11)) (concat (expression.bv_nat 53 0) (extract v_6 53 64)) (mux (eq v_4 (expression.bv_nat 8 10)) (concat (expression.bv_nat 54 0) (extract v_6 54 64)) (mux (eq v_4 (expression.bv_nat 8 9)) (concat (expression.bv_nat 55 0) (extract v_6 55 64)) (mux (eq v_4 (expression.bv_nat 8 8)) (concat (expression.bv_nat 56 0) (extract v_6 56 64)) (mux (eq v_4 (expression.bv_nat 8 7)) (concat (expression.bv_nat 57 0) (extract v_6 57 64)) (mux (eq v_4 (expression.bv_nat 8 6)) (concat (expression.bv_nat 58 0) (extract v_6 58 64)) (mux (eq v_4 (expression.bv_nat 8 5)) (concat (expression.bv_nat 59 0) (extract v_6 59 64)) (mux (eq v_4 (expression.bv_nat 8 4)) (concat (expression.bv_nat 60 0) (extract v_6 60 64)) (mux (eq v_4 (expression.bv_nat 8 3)) (concat (expression.bv_nat 61 0) (extract v_6 61 64)) (mux (eq v_4 (expression.bv_nat 8 2)) (concat (expression.bv_nat 62 0) (extract v_6 62 64)) (concat (expression.bv_nat 63 0) (mux (eq v_4 (expression.bv_nat 8 1)) (extract v_6 63 64) (expression.bv_nat 1 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) v_6);
      setRegister (lhs.of_reg r64_2) v_7;
      setRegister af undef;
      setRegister cf (uge v_4 (expression.bv_nat 8 64));
      setRegister of bit_zero;
      setRegister pf undef;
      setRegister sf (mux v_5 bit_zero (isBitSet v_6 0));
      setRegister zf (zeroFlag v_7);
      pure ()
    pat_end
