def bzhiq1 : instruction :=
  definst "bzhiq" $ do
    pattern fun (v_3309 : reg (bv 64)) (v_3310 : reg (bv 64)) (v_3311 : reg (bv 64)) => do
      v_6524 <- getRegister v_3309;
      v_6525 <- eval (extract v_6524 56 64);
      v_6526 <- eval (ult v_6525 (expression.bv_nat 8 64));
      v_6528 <- getRegister v_3310;
      v_6780 <- eval (mux v_6526 (mux (eq v_6525 (expression.bv_nat 8 63)) (concat (expression.bv_nat 1 0) (extract v_6528 1 64)) (mux (eq v_6525 (expression.bv_nat 8 62)) (concat (expression.bv_nat 2 0) (extract v_6528 2 64)) (mux (eq v_6525 (expression.bv_nat 8 61)) (concat (expression.bv_nat 3 0) (extract v_6528 3 64)) (mux (eq v_6525 (expression.bv_nat 8 60)) (concat (expression.bv_nat 4 0) (extract v_6528 4 64)) (mux (eq v_6525 (expression.bv_nat 8 59)) (concat (expression.bv_nat 5 0) (extract v_6528 5 64)) (mux (eq v_6525 (expression.bv_nat 8 58)) (concat (expression.bv_nat 6 0) (extract v_6528 6 64)) (mux (eq v_6525 (expression.bv_nat 8 57)) (concat (expression.bv_nat 7 0) (extract v_6528 7 64)) (mux (eq v_6525 (expression.bv_nat 8 56)) (concat (expression.bv_nat 8 0) (extract v_6528 8 64)) (mux (eq v_6525 (expression.bv_nat 8 55)) (concat (expression.bv_nat 9 0) (extract v_6528 9 64)) (mux (eq v_6525 (expression.bv_nat 8 54)) (concat (expression.bv_nat 10 0) (extract v_6528 10 64)) (mux (eq v_6525 (expression.bv_nat 8 53)) (concat (expression.bv_nat 11 0) (extract v_6528 11 64)) (mux (eq v_6525 (expression.bv_nat 8 52)) (concat (expression.bv_nat 12 0) (extract v_6528 12 64)) (mux (eq v_6525 (expression.bv_nat 8 51)) (concat (expression.bv_nat 13 0) (extract v_6528 13 64)) (mux (eq v_6525 (expression.bv_nat 8 50)) (concat (expression.bv_nat 14 0) (extract v_6528 14 64)) (mux (eq v_6525 (expression.bv_nat 8 49)) (concat (expression.bv_nat 15 0) (extract v_6528 15 64)) (mux (eq v_6525 (expression.bv_nat 8 48)) (concat (expression.bv_nat 16 0) (extract v_6528 16 64)) (mux (eq v_6525 (expression.bv_nat 8 47)) (concat (expression.bv_nat 17 0) (extract v_6528 17 64)) (mux (eq v_6525 (expression.bv_nat 8 46)) (concat (expression.bv_nat 18 0) (extract v_6528 18 64)) (mux (eq v_6525 (expression.bv_nat 8 45)) (concat (expression.bv_nat 19 0) (extract v_6528 19 64)) (mux (eq v_6525 (expression.bv_nat 8 44)) (concat (expression.bv_nat 20 0) (extract v_6528 20 64)) (mux (eq v_6525 (expression.bv_nat 8 43)) (concat (expression.bv_nat 21 0) (extract v_6528 21 64)) (mux (eq v_6525 (expression.bv_nat 8 42)) (concat (expression.bv_nat 22 0) (extract v_6528 22 64)) (mux (eq v_6525 (expression.bv_nat 8 41)) (concat (expression.bv_nat 23 0) (extract v_6528 23 64)) (mux (eq v_6525 (expression.bv_nat 8 40)) (concat (expression.bv_nat 24 0) (extract v_6528 24 64)) (mux (eq v_6525 (expression.bv_nat 8 39)) (concat (expression.bv_nat 25 0) (extract v_6528 25 64)) (mux (eq v_6525 (expression.bv_nat 8 38)) (concat (expression.bv_nat 26 0) (extract v_6528 26 64)) (mux (eq v_6525 (expression.bv_nat 8 37)) (concat (expression.bv_nat 27 0) (extract v_6528 27 64)) (mux (eq v_6525 (expression.bv_nat 8 36)) (concat (expression.bv_nat 28 0) (extract v_6528 28 64)) (mux (eq v_6525 (expression.bv_nat 8 35)) (concat (expression.bv_nat 29 0) (extract v_6528 29 64)) (mux (eq v_6525 (expression.bv_nat 8 34)) (concat (expression.bv_nat 30 0) (extract v_6528 30 64)) (mux (eq v_6525 (expression.bv_nat 8 33)) (concat (expression.bv_nat 31 0) (extract v_6528 31 64)) (mux (eq v_6525 (expression.bv_nat 8 32)) (concat (expression.bv_nat 32 0) (extract v_6528 32 64)) (mux (eq v_6525 (expression.bv_nat 8 31)) (concat (expression.bv_nat 33 0) (extract v_6528 33 64)) (mux (eq v_6525 (expression.bv_nat 8 30)) (concat (expression.bv_nat 34 0) (extract v_6528 34 64)) (mux (eq v_6525 (expression.bv_nat 8 29)) (concat (expression.bv_nat 35 0) (extract v_6528 35 64)) (mux (eq v_6525 (expression.bv_nat 8 28)) (concat (expression.bv_nat 36 0) (extract v_6528 36 64)) (mux (eq v_6525 (expression.bv_nat 8 27)) (concat (expression.bv_nat 37 0) (extract v_6528 37 64)) (mux (eq v_6525 (expression.bv_nat 8 26)) (concat (expression.bv_nat 38 0) (extract v_6528 38 64)) (mux (eq v_6525 (expression.bv_nat 8 25)) (concat (expression.bv_nat 39 0) (extract v_6528 39 64)) (mux (eq v_6525 (expression.bv_nat 8 24)) (concat (expression.bv_nat 40 0) (extract v_6528 40 64)) (mux (eq v_6525 (expression.bv_nat 8 23)) (concat (expression.bv_nat 41 0) (extract v_6528 41 64)) (mux (eq v_6525 (expression.bv_nat 8 22)) (concat (expression.bv_nat 42 0) (extract v_6528 42 64)) (mux (eq v_6525 (expression.bv_nat 8 21)) (concat (expression.bv_nat 43 0) (extract v_6528 43 64)) (mux (eq v_6525 (expression.bv_nat 8 20)) (concat (expression.bv_nat 44 0) (extract v_6528 44 64)) (mux (eq v_6525 (expression.bv_nat 8 19)) (concat (expression.bv_nat 45 0) (extract v_6528 45 64)) (mux (eq v_6525 (expression.bv_nat 8 18)) (concat (expression.bv_nat 46 0) (extract v_6528 46 64)) (mux (eq v_6525 (expression.bv_nat 8 17)) (concat (expression.bv_nat 47 0) (extract v_6528 47 64)) (mux (eq v_6525 (expression.bv_nat 8 16)) (concat (expression.bv_nat 48 0) (extract v_6528 48 64)) (mux (eq v_6525 (expression.bv_nat 8 15)) (concat (expression.bv_nat 49 0) (extract v_6528 49 64)) (mux (eq v_6525 (expression.bv_nat 8 14)) (concat (expression.bv_nat 50 0) (extract v_6528 50 64)) (mux (eq v_6525 (expression.bv_nat 8 13)) (concat (expression.bv_nat 51 0) (extract v_6528 51 64)) (mux (eq v_6525 (expression.bv_nat 8 12)) (concat (expression.bv_nat 52 0) (extract v_6528 52 64)) (mux (eq v_6525 (expression.bv_nat 8 11)) (concat (expression.bv_nat 53 0) (extract v_6528 53 64)) (mux (eq v_6525 (expression.bv_nat 8 10)) (concat (expression.bv_nat 54 0) (extract v_6528 54 64)) (mux (eq v_6525 (expression.bv_nat 8 9)) (concat (expression.bv_nat 55 0) (extract v_6528 55 64)) (mux (eq v_6525 (expression.bv_nat 8 8)) (concat (expression.bv_nat 56 0) (extract v_6528 56 64)) (mux (eq v_6525 (expression.bv_nat 8 7)) (concat (expression.bv_nat 57 0) (extract v_6528 57 64)) (mux (eq v_6525 (expression.bv_nat 8 6)) (concat (expression.bv_nat 58 0) (extract v_6528 58 64)) (mux (eq v_6525 (expression.bv_nat 8 5)) (concat (expression.bv_nat 59 0) (extract v_6528 59 64)) (mux (eq v_6525 (expression.bv_nat 8 4)) (concat (expression.bv_nat 60 0) (extract v_6528 60 64)) (mux (eq v_6525 (expression.bv_nat 8 3)) (concat (expression.bv_nat 61 0) (extract v_6528 61 64)) (mux (eq v_6525 (expression.bv_nat 8 2)) (concat (expression.bv_nat 62 0) (extract v_6528 62 64)) (concat (expression.bv_nat 63 0) (mux (eq v_6525 (expression.bv_nat 8 1)) (extract v_6528 63 64) (expression.bv_nat 1 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) v_6528);
      setRegister (lhs.of_reg v_3311) v_6780;
      setRegister af undef;
      setRegister cf (uge v_6525 (expression.bv_nat 8 64));
      setRegister of bit_zero;
      setRegister pf undef;
      setRegister sf (#if_#then_#else_#fi_K-EQUAL v_6526 bit_zero (isBitSet v_6528 0));
      setRegister zf (zeroFlag v_6780);
      pure ()
    pat_end;
    pattern fun (v_3304 : reg (bv 64)) (v_3303 : Mem) (v_3305 : reg (bv 64)) => do
      v_9707 <- getRegister v_3304;
      v_9708 <- eval (extract v_9707 56 64);
      v_9709 <- eval (ult v_9708 (expression.bv_nat 8 64));
      v_9711 <- evaluateAddress v_3303;
      v_9712 <- load v_9711 8;
      v_9964 <- eval (mux v_9709 (mux (eq v_9708 (expression.bv_nat 8 63)) (concat (expression.bv_nat 1 0) (extract v_9712 1 64)) (mux (eq v_9708 (expression.bv_nat 8 62)) (concat (expression.bv_nat 2 0) (extract v_9712 2 64)) (mux (eq v_9708 (expression.bv_nat 8 61)) (concat (expression.bv_nat 3 0) (extract v_9712 3 64)) (mux (eq v_9708 (expression.bv_nat 8 60)) (concat (expression.bv_nat 4 0) (extract v_9712 4 64)) (mux (eq v_9708 (expression.bv_nat 8 59)) (concat (expression.bv_nat 5 0) (extract v_9712 5 64)) (mux (eq v_9708 (expression.bv_nat 8 58)) (concat (expression.bv_nat 6 0) (extract v_9712 6 64)) (mux (eq v_9708 (expression.bv_nat 8 57)) (concat (expression.bv_nat 7 0) (extract v_9712 7 64)) (mux (eq v_9708 (expression.bv_nat 8 56)) (concat (expression.bv_nat 8 0) (extract v_9712 8 64)) (mux (eq v_9708 (expression.bv_nat 8 55)) (concat (expression.bv_nat 9 0) (extract v_9712 9 64)) (mux (eq v_9708 (expression.bv_nat 8 54)) (concat (expression.bv_nat 10 0) (extract v_9712 10 64)) (mux (eq v_9708 (expression.bv_nat 8 53)) (concat (expression.bv_nat 11 0) (extract v_9712 11 64)) (mux (eq v_9708 (expression.bv_nat 8 52)) (concat (expression.bv_nat 12 0) (extract v_9712 12 64)) (mux (eq v_9708 (expression.bv_nat 8 51)) (concat (expression.bv_nat 13 0) (extract v_9712 13 64)) (mux (eq v_9708 (expression.bv_nat 8 50)) (concat (expression.bv_nat 14 0) (extract v_9712 14 64)) (mux (eq v_9708 (expression.bv_nat 8 49)) (concat (expression.bv_nat 15 0) (extract v_9712 15 64)) (mux (eq v_9708 (expression.bv_nat 8 48)) (concat (expression.bv_nat 16 0) (extract v_9712 16 64)) (mux (eq v_9708 (expression.bv_nat 8 47)) (concat (expression.bv_nat 17 0) (extract v_9712 17 64)) (mux (eq v_9708 (expression.bv_nat 8 46)) (concat (expression.bv_nat 18 0) (extract v_9712 18 64)) (mux (eq v_9708 (expression.bv_nat 8 45)) (concat (expression.bv_nat 19 0) (extract v_9712 19 64)) (mux (eq v_9708 (expression.bv_nat 8 44)) (concat (expression.bv_nat 20 0) (extract v_9712 20 64)) (mux (eq v_9708 (expression.bv_nat 8 43)) (concat (expression.bv_nat 21 0) (extract v_9712 21 64)) (mux (eq v_9708 (expression.bv_nat 8 42)) (concat (expression.bv_nat 22 0) (extract v_9712 22 64)) (mux (eq v_9708 (expression.bv_nat 8 41)) (concat (expression.bv_nat 23 0) (extract v_9712 23 64)) (mux (eq v_9708 (expression.bv_nat 8 40)) (concat (expression.bv_nat 24 0) (extract v_9712 24 64)) (mux (eq v_9708 (expression.bv_nat 8 39)) (concat (expression.bv_nat 25 0) (extract v_9712 25 64)) (mux (eq v_9708 (expression.bv_nat 8 38)) (concat (expression.bv_nat 26 0) (extract v_9712 26 64)) (mux (eq v_9708 (expression.bv_nat 8 37)) (concat (expression.bv_nat 27 0) (extract v_9712 27 64)) (mux (eq v_9708 (expression.bv_nat 8 36)) (concat (expression.bv_nat 28 0) (extract v_9712 28 64)) (mux (eq v_9708 (expression.bv_nat 8 35)) (concat (expression.bv_nat 29 0) (extract v_9712 29 64)) (mux (eq v_9708 (expression.bv_nat 8 34)) (concat (expression.bv_nat 30 0) (extract v_9712 30 64)) (mux (eq v_9708 (expression.bv_nat 8 33)) (concat (expression.bv_nat 31 0) (extract v_9712 31 64)) (mux (eq v_9708 (expression.bv_nat 8 32)) (concat (expression.bv_nat 32 0) (extract v_9712 32 64)) (mux (eq v_9708 (expression.bv_nat 8 31)) (concat (expression.bv_nat 33 0) (extract v_9712 33 64)) (mux (eq v_9708 (expression.bv_nat 8 30)) (concat (expression.bv_nat 34 0) (extract v_9712 34 64)) (mux (eq v_9708 (expression.bv_nat 8 29)) (concat (expression.bv_nat 35 0) (extract v_9712 35 64)) (mux (eq v_9708 (expression.bv_nat 8 28)) (concat (expression.bv_nat 36 0) (extract v_9712 36 64)) (mux (eq v_9708 (expression.bv_nat 8 27)) (concat (expression.bv_nat 37 0) (extract v_9712 37 64)) (mux (eq v_9708 (expression.bv_nat 8 26)) (concat (expression.bv_nat 38 0) (extract v_9712 38 64)) (mux (eq v_9708 (expression.bv_nat 8 25)) (concat (expression.bv_nat 39 0) (extract v_9712 39 64)) (mux (eq v_9708 (expression.bv_nat 8 24)) (concat (expression.bv_nat 40 0) (extract v_9712 40 64)) (mux (eq v_9708 (expression.bv_nat 8 23)) (concat (expression.bv_nat 41 0) (extract v_9712 41 64)) (mux (eq v_9708 (expression.bv_nat 8 22)) (concat (expression.bv_nat 42 0) (extract v_9712 42 64)) (mux (eq v_9708 (expression.bv_nat 8 21)) (concat (expression.bv_nat 43 0) (extract v_9712 43 64)) (mux (eq v_9708 (expression.bv_nat 8 20)) (concat (expression.bv_nat 44 0) (extract v_9712 44 64)) (mux (eq v_9708 (expression.bv_nat 8 19)) (concat (expression.bv_nat 45 0) (extract v_9712 45 64)) (mux (eq v_9708 (expression.bv_nat 8 18)) (concat (expression.bv_nat 46 0) (extract v_9712 46 64)) (mux (eq v_9708 (expression.bv_nat 8 17)) (concat (expression.bv_nat 47 0) (extract v_9712 47 64)) (mux (eq v_9708 (expression.bv_nat 8 16)) (concat (expression.bv_nat 48 0) (extract v_9712 48 64)) (mux (eq v_9708 (expression.bv_nat 8 15)) (concat (expression.bv_nat 49 0) (extract v_9712 49 64)) (mux (eq v_9708 (expression.bv_nat 8 14)) (concat (expression.bv_nat 50 0) (extract v_9712 50 64)) (mux (eq v_9708 (expression.bv_nat 8 13)) (concat (expression.bv_nat 51 0) (extract v_9712 51 64)) (mux (eq v_9708 (expression.bv_nat 8 12)) (concat (expression.bv_nat 52 0) (extract v_9712 52 64)) (mux (eq v_9708 (expression.bv_nat 8 11)) (concat (expression.bv_nat 53 0) (extract v_9712 53 64)) (mux (eq v_9708 (expression.bv_nat 8 10)) (concat (expression.bv_nat 54 0) (extract v_9712 54 64)) (mux (eq v_9708 (expression.bv_nat 8 9)) (concat (expression.bv_nat 55 0) (extract v_9712 55 64)) (mux (eq v_9708 (expression.bv_nat 8 8)) (concat (expression.bv_nat 56 0) (extract v_9712 56 64)) (mux (eq v_9708 (expression.bv_nat 8 7)) (concat (expression.bv_nat 57 0) (extract v_9712 57 64)) (mux (eq v_9708 (expression.bv_nat 8 6)) (concat (expression.bv_nat 58 0) (extract v_9712 58 64)) (mux (eq v_9708 (expression.bv_nat 8 5)) (concat (expression.bv_nat 59 0) (extract v_9712 59 64)) (mux (eq v_9708 (expression.bv_nat 8 4)) (concat (expression.bv_nat 60 0) (extract v_9712 60 64)) (mux (eq v_9708 (expression.bv_nat 8 3)) (concat (expression.bv_nat 61 0) (extract v_9712 61 64)) (mux (eq v_9708 (expression.bv_nat 8 2)) (concat (expression.bv_nat 62 0) (extract v_9712 62 64)) (concat (expression.bv_nat 63 0) (mux (eq v_9708 (expression.bv_nat 8 1)) (extract v_9712 63 64) (expression.bv_nat 1 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) v_9712);
      setRegister (lhs.of_reg v_3305) v_9964;
      setRegister af undef;
      setRegister cf (uge v_9708 (expression.bv_nat 8 64));
      setRegister of bit_zero;
      setRegister pf undef;
      setRegister sf (#if_#then_#else_#fi_K-EQUAL v_9709 bit_zero (isBitSet v_9712 0));
      setRegister zf (zeroFlag v_9964);
      pure ()
    pat_end
